buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.6-SNAPSHOT" apply false
}

apply from: "https://raw.githubusercontent.com/Flemmli97/GradleScripts/mc-architectury-v1/changelog.gradle"

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven { url = 'https://maven.parchmentmc.org' }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.parchment_version}@zip")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = project.minecraft_version + "-" + rootProject.mod_version
    group = rootProject.maven_group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = project.hasProperty('jvm') ? rootProject.jvm : 21
    }

    java {
        withSourcesJar()
    }
}

task buildAll {
    dependsOn(":fabric:build")
    dependsOn(":forge:build")
}

task cleanAll {
    dependsOn clean
    dependsOn(":common:clean")
    dependsOn(":fabric:clean")
    dependsOn(":forge:clean")
}

task publishAll {
    dependsOn(":common:publish")
    dependsOn(":fabric:publish")
    dependsOn(":forge:publish")
}

task buildToLocal(group: "publishing") {
    dependsOn cleanAll, buildAll, ":common:publishToMavenLocal", ":fabric:publishToMavenLocal", ":forge:publishToMavenLocal"
    buildAll.mustRunAfter cleanAll
}

publishAll.dependsOn buildAll
